/*
 * This file is generated by jOOQ.
 */
package de.sainth.recipemanager.db.generated.tables.records;


import javax.annotation.Generated;

import de.sainth.recipemanager.db.generated.tables.Recipe;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeRecord extends UpdatableRecordImpl<RecipeRecord> implements Record4<Long, String, String, Short> {

  private static final long serialVersionUID = -229830818;

  /**
   * Setter for <code>public.recipe.recipe_id</code>.
   */
  public void setRecipeId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>public.recipe.recipe_id</code>.
   */
  public Long getRecipeId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>public.recipe.name</code>.
   */
  public void setName(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>public.recipe.name</code>.
   */
  public String getName() {
    return (String) get(1);
  }

  /**
   * Setter for <code>public.recipe.description</code>.
   */
  public void setDescription(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>public.recipe.description</code>.
   */
  public String getDescription() {
    return (String) get(2);
  }

  /**
   * Setter for <code>public.recipe.portions</code>.
   */
  public void setPortions(Short value) {
    set(3, value);
  }

  /**
   * Getter for <code>public.recipe.portions</code>.
   */
  public Short getPortions() {
    return (Short) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Row4<Long, String, String, Short> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row4<Long, String, String, Short> valuesRow() {
    return (Row4) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Long> field1() {
    return Recipe.RECIPE.RECIPE_ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field2() {
    return Recipe.RECIPE.NAME;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field3() {
    return Recipe.RECIPE.DESCRIPTION;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Short> field4() {
    return Recipe.RECIPE.PORTIONS;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long component1() {
    return getRecipeId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component2() {
    return getName();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component3() {
    return getDescription();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Short component4() {
    return getPortions();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long value1() {
    return getRecipeId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value2() {
    return getName();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value3() {
    return getDescription();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Short value4() {
    return getPortions();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RecipeRecord value1(Long value) {
    setRecipeId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RecipeRecord value2(String value) {
    setName(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RecipeRecord value3(String value) {
    setDescription(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RecipeRecord value4(Short value) {
    setPortions(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public RecipeRecord values(Long value1, String value2, String value3, Short value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached RecipeRecord
   */
  public RecipeRecord() {
    super(Recipe.RECIPE);
  }

  /**
   * Create a detached, initialised RecipeRecord
   */
  public RecipeRecord(Long recipeId, String name, String description, Short portions) {
    super(Recipe.RECIPE);

    set(0, recipeId);
    set(1, name);
    set(2, description);
    set(3, portions);
  }
}
