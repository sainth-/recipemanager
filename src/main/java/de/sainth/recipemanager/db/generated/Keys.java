/*
 * This file is generated by jOOQ.
 */
package de.sainth.recipemanager.db.generated;


import javax.annotation.Generated;

import de.sainth.recipemanager.db.generated.tables.Direction;
import de.sainth.recipemanager.db.generated.tables.Ingredient;
import de.sainth.recipemanager.db.generated.tables.Recipe;
import de.sainth.recipemanager.db.generated.tables.Unit;
import de.sainth.recipemanager.db.generated.tables.records.DirectionRecord;
import de.sainth.recipemanager.db.generated.tables.records.IngredientRecord;
import de.sainth.recipemanager.db.generated.tables.records.RecipeRecord;
import de.sainth.recipemanager.db.generated.tables.records.UnitRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

  // -------------------------------------------------------------------------
  // IDENTITY definitions
  // -------------------------------------------------------------------------

  public static final Identity<IngredientRecord, Long> IDENTITY_INGREDIENT = Identities0.IDENTITY_INGREDIENT;
  public static final Identity<RecipeRecord, Long> IDENTITY_RECIPE = Identities0.IDENTITY_RECIPE;

  // -------------------------------------------------------------------------
  // UNIQUE and PRIMARY KEY definitions
  // -------------------------------------------------------------------------

  public static final UniqueKey<DirectionRecord> DIRECTION_PKEY = UniqueKeys0.DIRECTION_PKEY;
  public static final UniqueKey<IngredientRecord> INGREDIENT_PKEY = UniqueKeys0.INGREDIENT_PKEY;
  public static final UniqueKey<RecipeRecord> RECIPE_PKEY = UniqueKeys0.RECIPE_PKEY;
  public static final UniqueKey<UnitRecord> UNIT_PKEY = UniqueKeys0.UNIT_PKEY;

  // -------------------------------------------------------------------------
  // FOREIGN KEY definitions
  // -------------------------------------------------------------------------

  public static final ForeignKey<DirectionRecord, RecipeRecord> DIRECTION__DIRECTION_RECIPE_ID_FKEY = ForeignKeys0.DIRECTION__DIRECTION_RECIPE_ID_FKEY;
  public static final ForeignKey<IngredientRecord, RecipeRecord> INGREDIENT__INGREDIENT_RECIPE_ID_FKEY = ForeignKeys0.INGREDIENT__INGREDIENT_RECIPE_ID_FKEY;
  public static final ForeignKey<IngredientRecord, UnitRecord> INGREDIENT__INGREDIENT_UNIT_NAME_FKEY = ForeignKeys0.INGREDIENT__INGREDIENT_UNIT_NAME_FKEY;

  // -------------------------------------------------------------------------
  // [#1459] distribute members to avoid static initialisers > 64kb
  // -------------------------------------------------------------------------

  private static class Identities0 {
    public static Identity<IngredientRecord, Long> IDENTITY_INGREDIENT = Internal.createIdentity(Ingredient.INGREDIENT,
                                                                                                 Ingredient.INGREDIENT.INGREDIENT_ID);
    public static Identity<RecipeRecord, Long> IDENTITY_RECIPE = Internal.createIdentity(Recipe.RECIPE,
                                                                                         Recipe.RECIPE.RECIPE_ID);
  }

  private static class UniqueKeys0 {
    public static final UniqueKey<DirectionRecord> DIRECTION_PKEY = Internal.createUniqueKey(Direction.DIRECTION,
                                                                                             "direction_pkey",
                                                                                             Direction.DIRECTION.RECIPE_ID,
                                                                                             Direction.DIRECTION.POSITION);
    public static final UniqueKey<IngredientRecord> INGREDIENT_PKEY = Internal.createUniqueKey(Ingredient.INGREDIENT,
                                                                                               "ingredient_pkey",
                                                                                               Ingredient.INGREDIENT.INGREDIENT_ID);
    public static final UniqueKey<RecipeRecord> RECIPE_PKEY = Internal.createUniqueKey(Recipe.RECIPE,
                                                                                       "recipe_pkey",
                                                                                       Recipe.RECIPE.RECIPE_ID);
    public static final UniqueKey<UnitRecord> UNIT_PKEY = Internal.createUniqueKey(Unit.UNIT,
                                                                                   "unit_pkey",
                                                                                   Unit.UNIT.UNIT_NAME);
  }

  private static class ForeignKeys0 {
    public static final ForeignKey<DirectionRecord, RecipeRecord> DIRECTION__DIRECTION_RECIPE_ID_FKEY = Internal
        .createForeignKey(de.sainth.recipemanager.db.generated.Keys.RECIPE_PKEY,
                          Direction.DIRECTION,
                          "direction__direction_recipe_id_fkey",
                          Direction.DIRECTION.RECIPE_ID);
    public static final ForeignKey<IngredientRecord, RecipeRecord> INGREDIENT__INGREDIENT_RECIPE_ID_FKEY = Internal
        .createForeignKey(de.sainth.recipemanager.db.generated.Keys.RECIPE_PKEY,
                          Ingredient.INGREDIENT,
                          "ingredient__ingredient_recipe_id_fkey",
                          Ingredient.INGREDIENT.RECIPE_ID);
    public static final ForeignKey<IngredientRecord, UnitRecord> INGREDIENT__INGREDIENT_UNIT_NAME_FKEY = Internal
        .createForeignKey(de.sainth.recipemanager.db.generated.Keys.UNIT_PKEY,
                          Ingredient.INGREDIENT,
                          "ingredient__ingredient_unit_name_fkey",
                          Ingredient.INGREDIENT.UNIT_NAME);
  }
}
