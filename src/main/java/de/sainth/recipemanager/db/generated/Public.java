/*
 * This file is generated by jOOQ.
 */
package de.sainth.recipemanager.db.generated;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import de.sainth.recipemanager.db.generated.tables.Direction;
import de.sainth.recipemanager.db.generated.tables.Ingredient;
import de.sainth.recipemanager.db.generated.tables.Recipe;
import de.sainth.recipemanager.db.generated.tables.Unit;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

  private static final long serialVersionUID = 583396381;

  /**
   * The reference instance of <code>public</code>
   */
  public static final Public PUBLIC = new Public();

  /**
   * The table <code>public.direction</code>.
   */
  public final Direction DIRECTION = de.sainth.recipemanager.db.generated.tables.Direction.DIRECTION;

  /**
   * The table <code>public.ingredient</code>.
   */
  public final Ingredient INGREDIENT = de.sainth.recipemanager.db.generated.tables.Ingredient.INGREDIENT;

  /**
   * The table <code>public.recipe</code>.
   */
  public final Recipe RECIPE = de.sainth.recipemanager.db.generated.tables.Recipe.RECIPE;

  /**
   * The table <code>public.unit</code>.
   */
  public final Unit UNIT = de.sainth.recipemanager.db.generated.tables.Unit.UNIT;

  /**
   * No further instances allowed
   */
  private Public() {
    super("public", null);
  }


  /**
   * {@inheritDoc}
   */
  @Override
  public Catalog getCatalog() {
    return DefaultCatalog.DEFAULT_CATALOG;
  }

  @Override
  public final List<Sequence<?>> getSequences() {
    List result = new ArrayList();
    result.addAll(getSequences0());
    return result;
  }

  private final List<Sequence<?>> getSequences0() {
    return Arrays.<Sequence<?>>asList(
        Sequences.INGREDIENT_INGREDIENT_ID_SEQ,
        Sequences.RECIPE_RECIPE_ID_SEQ);
  }

  @Override
  public final List<Table<?>> getTables() {
    List result = new ArrayList();
    result.addAll(getTables0());
    return result;
  }

  private final List<Table<?>> getTables0() {
    return Arrays.<Table<?>>asList(
        Direction.DIRECTION,
        Ingredient.INGREDIENT,
        Recipe.RECIPE,
        Unit.UNIT);
  }
}
