/*
 * This file is generated by jOOQ.
 */
package de.sainth.recipemanager.db.generated.tables.records;


import javax.annotation.Generated;

import de.sainth.recipemanager.db.generated.tables.Direction;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DirectionRecord extends UpdatableRecordImpl<DirectionRecord> implements Record3<Long, Short, String> {

  private static final long serialVersionUID = 222123077;

  /**
   * Setter for <code>public.direction.recipe_id</code>.
   */
  public void setRecipeId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>public.direction.recipe_id</code>.
   */
  public Long getRecipeId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>public.direction.position</code>.
   */
  public void setPosition(Short value) {
    set(1, value);
  }

  /**
   * Getter for <code>public.direction.position</code>.
   */
  public Short getPosition() {
    return (Short) get(1);
  }

  /**
   * Setter for <code>public.direction.description</code>.
   */
  public void setDescription(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>public.direction.description</code>.
   */
  public String getDescription() {
    return (String) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Record2<Long, Short> key() {
    return (Record2) super.key();
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public Row3<Long, Short, String> fieldsRow() {
    return (Row3) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row3<Long, Short, String> valuesRow() {
    return (Row3) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Long> field1() {
    return Direction.DIRECTION.RECIPE_ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Short> field2() {
    return Direction.DIRECTION.POSITION;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<String> field3() {
    return Direction.DIRECTION.DESCRIPTION;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long component1() {
    return getRecipeId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Short component2() {
    return getPosition();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String component3() {
    return getDescription();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long value1() {
    return getRecipeId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Short value2() {
    return getPosition();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String value3() {
    return getDescription();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public DirectionRecord value1(Long value) {
    setRecipeId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public DirectionRecord value2(Short value) {
    setPosition(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public DirectionRecord value3(String value) {
    setDescription(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public DirectionRecord values(Long value1, Short value2, String value3) {
    value1(value1);
    value2(value2);
    value3(value3);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached DirectionRecord
   */
  public DirectionRecord() {
    super(Direction.DIRECTION);
  }

  /**
   * Create a detached, initialised DirectionRecord
   */
  public DirectionRecord(Long recipeId, Short position, String description) {
    super(Direction.DIRECTION);

    set(0, recipeId);
    set(1, position);
    set(2, description);
  }
}
